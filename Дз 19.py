# Напишіть програму, яка запитує у користувача ім('я та вік. Після отримання даних програма повинна виводити '
#                                                 'привітання у форматі: "Привіт, {ім')я}! Твій вік — {вік}
# (". ""Обробіть виняток, що виникає при введенні некоректного віку (вік < 0 або вік > 130), і виведіть "
# "повідомлення про помилку. )

# while True:
#     try:
#         name = input("Введіть ваше ім'я: ")
#         vik = int(input("Введіть ваш вік: "))
#         if vik < 0 or vik > 130:
#             print("Помилка! Вік не може бути між 0 або більше 130")
#         else:
#             print(f"Привіт {name},Твій вік -  {vik}!")
#             break
#     except ValueError:
#         print("Помилка: Введено некоректний вік або ім'я.")


# Реалізуйте перше завдання через функцію.
# Функція повинна приймати ім('я і вік як параметри і повертати відформатований рядок. '
# Перевірка коректності отриманих даних повинна бути всередині функції. Створіть дві версії реалізації функції:)
# Перша версія не обробляє виняток всередині функції. Уся обробка знаходиться зовні;
# Друга версія обробляє виняток усередині функції.

# def user():
#     while True:
#         try:
#             name = input("Введіть ваше ім'я: ")
#             vik = int(input("Введіть ваш вік: "))
#             if vik < 0 or vik > 130:
#                 print("Помилка! Вік не може бути між 0 або більше 130")
#             else:
#                 print(f"Привіт {name},Твій вік -  {vik}!")
#                 break
#         except ValueError:
#             print("Помилка: Введено некоректний вік або ім'я.")
#
# print(user())

# def user(name, vik):
#     if vik < 0 or vik > 130:
#         raise ValueError("Вік повинен бути від 0 до 130 років.")
#     return f"Привіт, {name}! Твій вік — {vik}."
#
# try:
#     name = input("Введіть ваше ім'я: ")
#     vik = int(input("Введіть ваш вік: "))
#     print(user(name, vik))
# except ValueError:
#     print("Помилка: Введено некоректний вік або ім'я.")


# Напишіть програму, яка дозволяє користувачеві ввести з клавіатури набір додатних (число більше нуля) чисел.
# Числа необхідно накопичувати у списку. Після отримання всіх значень програма повинна проаналізувати дані.
# У разі виявлення від('ємного значення програма має згенерувати виняток. Якщо всі значення у списку позитивні, '
#                      'програма має повернути на екран суму всіх чисел списку.)
# Згенерований виняток має бути оброблений кодом програми.

# while True:
#     while True:
#         ls = []
#         try:
#             for i in range(5):
#                 num = int(input("Введіть число: "))
#                 if num < 0:
#                     raise ValueError("Число не може бути від'ємним")
#                 ls.append(num)
#             print(ls)
#             break
#         except ValueError as e:
#             print(e)

# Реалізуйте третє завдання через функцію. Функція повинна приймати список як аргумент і
# повертати суму елементів списку. Перевірка коректності отриманих даних повинна бути всередині функції.
# Створіть дві версії реалізації функції:
# Перша версія не обробляє виняток всередині функції. Уся обробка знаходиться зовні;
# Друга версія обробляє виняток усередині функції.

# def sum_elements(ls):
#     sum = 0
#     try:
#         for i in ls:
#             if i < 0:
#                 raise ValueError("Число не може бути від'ємним")
#             elif i >= 0:
#                 sum += i
#     except ValueError as e:
#         print(e)
#         return None
#     return sum
#
# list1 = [1,2,3,4, -5]
# print(sum_elements(list1))

def sum_elements(list1: list):
    for i in list1:
        if i < 0:
            raise ValueError("Число не може бути від'ємним")
    return list1

list1 = [1, 2, 3, 4, -5]
try:
    list1 = sum_elements(list1)
    sum = 0
    for i in list1:
        sum += i
    print(sum)
except ValueError as e:
    print(e)

